// <auto-generated />
using System;
using DataAggregator.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAggregator.Migrations
{
    [DbContext(typeof(AggregatorDbContext))]
    [Migration("20250911152105_SplitTables")]
    partial class SplitTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAggregator.Database.Entities.DrugApteka103ByEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CountryOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryTranslate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormTranslate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerTranslate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameTranslate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SiteRoute")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("NameOriginal");

                    b.HasIndex("SiteRoute");

                    b.ToTable("DrugsApteka103By");
                });

            modelBuilder.Entity("DataAggregator.Database.Entities.DrugTabletkaByEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CountryOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SiteRoute")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("NameOriginal");

                    b.HasIndex("SiteRoute");

                    b.ToTable("DrugsTabletkaBy");
                });
#pragma warning restore 612, 618
        }
    }
}
