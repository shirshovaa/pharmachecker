// <auto-generated />
using System;
using DataAggregator.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAggregator.Migrations
{
    [DbContext(typeof(AggregatorDbContext))]
    partial class AggregatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "pharmacy_site_module", new[] { "apteka103by", "tabletka_by" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAggregator.Database.Entities.DrugEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CountryOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryTranslate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FormTranslate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerTranslate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameTranslate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("NameOriginal");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("DataAggregator.Database.Entities.PharmacySiteEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DrugId")
                        .HasColumnType("uuid");

                    b.Property<int>("Module")
                        .HasColumnType("integer");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DrugId");

                    b.HasIndex("Id");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("DataAggregator.Database.Entities.PharmacySiteEntity", b =>
                {
                    b.HasOne("DataAggregator.Database.Entities.DrugEntity", "Drug")
                        .WithMany("PharmacySites")
                        .HasForeignKey("DrugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drug");
                });

            modelBuilder.Entity("DataAggregator.Database.Entities.DrugEntity", b =>
                {
                    b.Navigation("PharmacySites");
                });
#pragma warning restore 612, 618
        }
    }
}
